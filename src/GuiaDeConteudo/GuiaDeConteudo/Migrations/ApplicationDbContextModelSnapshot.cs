// <auto-generated />
using System;
using GuiaDeConteudo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuiaDeConteudo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuiaDeConteudo.Models.AreaConhecimento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AreaConhecimento");
                });

            modelBuilder.Entity("GuiaDeConteudo.Models.Avaliacao", b =>
                {
                    b.Property<int>("id_avalicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Materialid_material")
                        .HasColumnType("int");

                    b.Property<string>("Usuariocpf_usuario")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cpf_usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_material")
                        .HasColumnType("int");

                    b.Property<string>("justificativaAvaliacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.HasKey("id_avalicao");

                    b.HasIndex("Materialid_material");

                    b.HasIndex("Usuariocpf_usuario");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("GuiaDeConteudo.Models.Material", b =>
                {
                    b.Property<int>("id_material")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaConhecimentoID")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Usuariocpf_usuario")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cpf_usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("justificativaAnalise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_material");

                    b.HasIndex("AreaConhecimentoID");

                    b.HasIndex("Usuariocpf_usuario");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("GuiaDeConteudo.Models.Usuario", b =>
                {
                    b.Property<string>("cpf_usuario")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("formacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("grauEscolaridade")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.HasKey("cpf_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GuiaDeConteudo.Models.Avaliacao", b =>
                {
                    b.HasOne("GuiaDeConteudo.Models.Material", "Material")
                        .WithMany("Avaliacao")
                        .HasForeignKey("Materialid_material");

                    b.HasOne("GuiaDeConteudo.Models.Usuario", "Usuario")
                        .WithMany("Avaliacao")
                        .HasForeignKey("Usuariocpf_usuario");

                    b.Navigation("Material");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GuiaDeConteudo.Models.Material", b =>
                {
                    b.HasOne("GuiaDeConteudo.Models.AreaConhecimento", "AreaConhecimento")
                        .WithMany()
                        .HasForeignKey("AreaConhecimentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuiaDeConteudo.Models.Usuario", "Usuario")
                        .WithMany("Material")
                        .HasForeignKey("Usuariocpf_usuario");

                    b.Navigation("AreaConhecimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GuiaDeConteudo.Models.Material", b =>
                {
                    b.Navigation("Avaliacao");
                });

            modelBuilder.Entity("GuiaDeConteudo.Models.Usuario", b =>
                {
                    b.Navigation("Avaliacao");

                    b.Navigation("Material");
                });
#pragma warning restore 612, 618
        }
    }
}
